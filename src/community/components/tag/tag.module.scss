@use '@tedi-design-system/core/mixins';

@mixin tag-variant($primary-bg, $secondary-bg, $primary-text, $secondary-text) {
  &,
  &.tag--type-default {
    color: $secondary-text;
    background-color: $primary-bg;
  }

  &.tag--type-secondary {
    color: $primary-text;
    background-color: $secondary-bg;
  }

  &.tag--type-ghost {
    color: $primary-bg;
    background-color: var(--color-bg-default);
    border: 1px solid $primary-bg;

    &.tag--color-accent {
      color: $primary-text;
    }
  }

  &.tag--type-borderless {
    color: $primary-bg;
    background-color: var(--color-bg-default);
  }

  &.tag--type-invisible,
  &.tag--icon-only {
    padding: 0;
  }

  &.tag--type-invisible {
    color: $primary-bg;
    background-color: var(--color-transparent);
    border-color: var(--color-transparent);
  }

  &.tag--disabled {
    opacity: 0.5;
  }

  &.tag--type-secondary,
  &.tag--type-invisible,
  &.tag--type-borderless,
  &.tag--type-ghost {
    &.tag--with-arrow::after {
      border-bottom-color: $secondary-text;
    }
  }
}

.tag,
.tag--default {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: max-content;
  min-width: 1.5rem;
  max-width: 100%;
  min-height: 1.5rem;
  padding: 0.125rem 0.5rem;
  font-size: 0.875rem;
  text-align: center;
  text-decoration: none;
  vertical-align: bottom; // Removes extra pixel added to height by inline-flex
  border-radius: var(--border-radius-default);

  @include mixins.print-grayscale;

  &.tag--type-ghost {
    padding: calc(0.125rem - 1px) calc(0.5rem - 1px); // padding - ghost border
  }
}

.tag--large {
  min-width: 2.5rem;
  min-height: 2.5rem;
  font-size: 1rem;
}

.tag--color-default {
  @include tag-variant(
    var(--color-bg-inverted),
    var(--color-bg-subtle),
    var(--color-text-subtle),
    var(--color-text-inverted)
  );
}

.tag--color-primary {
  @include tag-variant(
    var(--color-primary-main),
    var(--color-primary-highlight-subtle),
    var(--color-primary-active),
    var(--color-text-inverted)
  );
}

.tag--color-accent {
  @include tag-variant(
    var(--color-accent-main),
    var(--color-accent-highlight),
    var(--color-accent-active),
    var(--color-text-inverted)
  );
}

.tag--color-positive {
  @include tag-variant(
    var(--color-positive-main),
    var(--color-positive-highlight),
    var(--color-positive-active),
    var(--color-text-inverted)
  );
}

.tag--color-warning {
  @include tag-variant(
    var(--color-warning-main),
    var(--color-warning-highlight),
    var(--color-warning-active),
    var(--color-text-inverted)
  );
}

.tag--color-important {
  @include tag-variant(
    var(--color-important-main),
    var(--color-important-highlight),
    var(--color-important-active),
    var(--color-text-inverted)
  );
}

.tag--with-arrow {
  &::after {
    position: absolute;
    top: 2px;
    right: 0;
    content: '';
    border-right: 4px solid var(--color-transparent);
    border-bottom: 4px solid var(--color-text-inverted);
    border-left: 4px solid var(--color-transparent);
    transform: rotate(45deg);
  }

  &.tag--large::after {
    right: -1px;
    border-width: 7px;
  }
}

.tag--status-error,
.tag--status-success,
.tag--status-inactive {
  &::before {
    position: absolute;
    top: -0.125rem;
    right: -0.125rem;
    width: 0.625rem;
    height: 0.625rem;
    content: '';
    border: 1px solid var(--color-bg-default);
    border-radius: 50%;
  }

  &.tag--large::before {
    top: -0.1875rem;
    right: -0.1875rem;
    width: 0.875rem;
    height: 0.875rem;
  }
}

.tag--status-success::before {
  background-color: var(--color-positive-main);
}

.tag--status-error::before {
  background-color: var(--color-important-main);
}

.tag--status-inactive::before {
  background-color: var(--color-text-disabled);
}

.tag--rounded {
  border-radius: 1.5rem;
}
