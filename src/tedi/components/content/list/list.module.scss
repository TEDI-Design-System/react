@use '@tedi-design-system/core/mixins';

$bullet-colors: (
  'primary': 'general-icon-primary',
  'secondary': 'general-icon-secondary',
  'tertiary': 'general-icon-tertiary',
  'brand': 'general-icon-brand',
  'brand-dark': 'general-icon-brand-dark',
  'success': 'general-icon-success',
  'warning': 'general-icon-warning',
  'warning-dark': 'general-icon-warning-dark',
  'danger': 'general-icon-danger',
  'white': 'general-icon-white',
);

.tedi-list {
  &:not([data-name='vertical-spacing']) {
    .tedi-list__item {
      &:not([data-name='vertical-spacing-item']) {
        @include mixins.responsive-styles(margin-top, list-list-item-margin-y);
        @include mixins.responsive-styles(margin-bottom, list-list-item-margin-y);
      }
    }
  }
}

.tedi-list--unordered {
  list-style: none;

  @include mixins.responsive-styles(padding-left, list-padding-left-level-1);

  .tedi-list__item {
    position: relative;
    padding-left: var(--list-padding-left-level-1-desktop);

    &::before {
      position: absolute;
      top: 0.5em;
      left: 0;
      content: '';
      border: 2px solid;
      border-radius: 50%;

      @include mixins.responsive-styles(width, list-icon-size);
      @include mixins.responsive-styles(height, list-icon-size);
    }

    ul.tedi-list .tedi-list__item::before {
      border-width: 1px;
    }

    ul.tedi-list .tedi-list__item ul.tedi-list .tedi-list__item::before {
      width: calc(var(--_width) * 0.9);
      height: calc(var(--_height) * 0.9);

      @include mixins.responsive-styles(--_width, list-icon-size);
      @include mixins.responsive-styles(--_height, list-icon-size);
    }
  }

  ul.tedi-list {
    padding-left: 0;
  }

  &.tedi-list {
    @each $name, $var in $bullet-colors {
      &--bullet-color-#{$name} {
        li::before {
          border-color: var(--#{$var});
        }
      }
    }
  }
}

.tedi-list--ordered {
  list-style: none;
  counter-reset: item;

  @include mixins.responsive-styles(padding-left, list-padding-left-level-1);

  .tedi-list__item {
    counter-increment: item;

    &::before {
      content: counters(item, '.') '. ';
    }

    ol {
      counter-reset: item;
    }
  }
}

.tedi-list--style-none {
  padding: 0;
  list-style: none;

  .tedi-list__item {
    &::before {
      display: none;
    }
  }
}
